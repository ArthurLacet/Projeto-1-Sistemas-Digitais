$date
	Tue Jul 13 20:48:52 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module comparador_8_bits_tb $end
$var wire 1 ! L_TB $end
$var wire 1 " G_TB $end
$var wire 1 # E_TB $end
$var reg 8 $ A_TB [7:0] $end
$var reg 8 % B_TB [7:0] $end
$scope module UUT $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 1 # E $end
$var wire 1 " G $end
$var wire 1 ! L $end
$var wire 4 ( b2 [3:0] $end
$var wire 4 ) b1 [3:0] $end
$var wire 4 * a2 [3:0] $end
$var wire 4 + a1 [3:0] $end
$var wire 1 , L2 $end
$var wire 1 - L1 $end
$var wire 1 . G2 $end
$var wire 1 / G1 $end
$var wire 1 0 E2 $end
$var wire 1 1 E1 $end
$scope module LSB $end
$var wire 4 2 A [3:0] $end
$var wire 4 3 B [3:0] $end
$var wire 1 - L $end
$var wire 1 / G $end
$var wire 1 1 E $end
$upscope $end
$scope module MSB $end
$var wire 4 4 A [3:0] $end
$var wire 4 5 B [3:0] $end
$var wire 1 , L $end
$var wire 1 . G $end
$var wire 1 0 E $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 5
b100 4
b0 3
b0 2
11
10
0/
0.
0-
0,
b0 +
b100 *
b0 )
b100 (
b1000000 '
b1000000 &
b1000000 %
b1000000 $
1#
0"
0!
$end
#10000
1"
0#
1/
01
b1 +
b1 2
b1000001 $
b1000001 &
#20000
0"
1!
1-
b1 )
b1 3
0/
01
b0 +
b0 2
b1000001 %
b1000001 '
b1000000 $
b1000000 &
#30000
